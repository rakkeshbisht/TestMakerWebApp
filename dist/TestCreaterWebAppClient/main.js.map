{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/answer-edit/answer-edit.component.css","webpack:///./src/app/components/answer-edit/answer-edit.component.html","webpack:///./src/app/components/answer-edit/answer-edit.component.ts","webpack:///./src/app/components/answer-list/answer-list.component.css","webpack:///./src/app/components/answer-list/answer-list.component.html","webpack:///./src/app/components/answer-list/answer-list.component.ts","webpack:///./src/app/components/app/app.component.css","webpack:///./src/app/components/app/app.component.html","webpack:///./src/app/components/app/app.component.ts","webpack:///./src/app/components/fetchdata/fetchdata.component.html","webpack:///./src/app/components/fetchdata/fetchdata.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navmenu/navmenu.component.css","webpack:///./src/app/components/navmenu/navmenu.component.html","webpack:///./src/app/components/navmenu/navmenu.component.ts","webpack:///./src/app/components/pagenotfound/pagenotfound.component.html","webpack:///./src/app/components/pagenotfound/pagenotfound.component.ts","webpack:///./src/app/components/question-edit/question-edit.component.css","webpack:///./src/app/components/question-edit/question-edit.component.html","webpack:///./src/app/components/question-edit/question-edit.component.ts","webpack:///./src/app/components/question-list/question-list.component.css","webpack:///./src/app/components/question-list/question-list.component.html","webpack:///./src/app/components/question-list/question-list.component.ts","webpack:///./src/app/components/quiz-create/quiz-create.component.css","webpack:///./src/app/components/quiz-create/quiz-create.component.html","webpack:///./src/app/components/quiz-create/quiz-create.component.ts","webpack:///./src/app/components/quiz-list/quiz-list.component.css","webpack:///./src/app/components/quiz-list/quiz-list.component.html","webpack:///./src/app/components/quiz-list/quiz-list.component.ts","webpack:///./src/app/components/quiz/quiz.component.css","webpack:///./src/app/components/quiz/quiz.component.html","webpack:///./src/app/components/quiz/quiz.component.ts","webpack:///./src/app/components/result-edit/result-edit.component.css","webpack:///./src/app/components/result-edit/result-edit.component.html","webpack:///./src/app/components/result-edit/result-edit.component.ts","webpack:///./src/app/components/result-list/result-list.component.css","webpack:///./src/app/components/result-list/result-list.component.html","webpack:///./src/app/components/result-list/result-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './components/app/app.component';\r\nimport { NavMenuComponent } from './components/navmenu/navmenu.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { FetchDataComponent } from './components/fetchdata/fetchdata.component';\r\nimport { QuizCreateComponent } from './components/quiz-create/quiz-create.component';\r\nimport { QuizListComponent } from './components/quiz-list/quiz-list.component';\r\nimport { QuestionListComponent } from \"./components/question-list/question-list.component\";\r\nimport { QuestionEditComponent } from \"./components/question-edit/question-edit.component\";\r\nimport { AnswerListComponent } from \"./components/answer-list/answer-list.component\";\r\nimport { AnswerEditComponent } from \"./components/answer-edit/answer-edit.component\";\r\nimport { ResultListComponent } from \"./components/result-list/result-list.component\";\r\nimport { ResultEditComponent } from \"./components/result-edit/result-edit.component\";\r\nimport { QuizComponent } from './components/quiz/quiz.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { PageNotFoundComponent } from './components/pagenotfound/pagenotfound.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    QuizCreateComponent,\r\n    FetchDataComponent,\r\n    HomeComponent,\r\n    QuizListComponent,\r\n    QuizComponent,\r\n    AboutComponent,\r\n    LoginComponent,\r\n    PageNotFoundComponent,\r\n    QuestionListComponent,\r\n    QuestionEditComponent,\r\n    AnswerListComponent,\r\n    AnswerEditComponent,\r\n    ResultListComponent,\r\n    ResultEditComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n      { path: 'home', component: HomeComponent },\r\n      { path: 'quiz/create', component: QuizCreateComponent },\r\n      { path: 'quiz/edit/:id', component: QuizCreateComponent },\r\n      { path: 'fetch-data', component: FetchDataComponent },  \r\n      { path: 'quiz/:id', component: QuizComponent }, \r\n      { path: 'question/create/:id', component: QuestionEditComponent }, \r\n      { path: 'question/edit/:id', component: QuestionEditComponent }, \r\n      { path: 'answer/edit/:id', component: AnswerEditComponent }, \r\n      { path: 'answer/create/:id', component: AnswerEditComponent }, \r\n      { path: 'result/edit/:id', component: ResultEditComponent }, \r\n      { path: 'result/create/:id', component: ResultEditComponent }, \r\n      { path: 'about', component: AboutComponent },  \r\n      { path: 'login', component: LoginComponent },  \r\n      { path: '**', component: PageNotFoundComponent }      \r\n    ])\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h2> {{title}} </h2>\\r\\n<div>\\r\\n  TestMakerFree : a production ready, fully featured SPA\\r\\n  Powered by ASP.Net WebAPI and Angular 6\\r\\n</div>\\r\\n\"","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"about\",\r\n    templateUrl: './about.component.html'    \r\n})\r\n\r\nexport class AboutComponent {\r\n    title = \"About\";          \r\n    \r\n}\r\n\r\n\r\n\r\n\r\n","module.exports = \".answer-edit textarea{\\r\\n    min-width: 500px;\\r\\n}\"","module.exports = \"<h2>{{title}}</h2>\\r\\n<div class=\\\"answer-edit\\\">\\r\\n    <div>\\r\\n        <label for=\\\"text\\\">Answer text:</label>\\r\\n        <br />\\r\\n        <textarea id=\\\"text\\\" [(ngModel)]=\\\"answer.text\\\"  placeholder=\\\"enter a suitable text...\\\"></textarea>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n        <label for=\\\"value\\\">Score Value:</label>\\r\\n        <br />\\r\\n        <select name=\\\"value\\\" id=\\\"value\\\" [(ngModel)]=\\\"answer.value\\\">\\r\\n            <option *ngFor=\\\"let num of [-5,-4,-3,-2,-1,0,1,2,3,4,5]\\\" [value]=\\\"num\\\">{{num}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div>\\r\\n        <input *ngIf=\\\"editMode\\\" type=\\\"button\\\" value=\\\"Apply Changes\\\" (click)=\\\"onSubmit(answer)\\\" />\\r\\n        <input *ngIf=\\\"!editMode\\\" type=\\\"button\\\" value=\\\"Create the answer\\\" (click)=\\\"onSubmit(answer)\\\" />\\r\\n        <input type=\\\"button\\\" value=\\\"Cancel\\\" (click)=\\\"onBack()\\\" />\\r\\n    </div>    \\r\\n</div>\"","import { Component,Injectable, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'answer-edit',\r\n    templateUrl: './answer-edit.component.html',\r\n    styleUrls : ['./answer-edit.component.css']\r\n})\r\n\r\nexport class AnswerEditComponent{\r\n    title : string;\r\n    answer : Answer;\r\n\r\n    editMode: boolean;\r\n\r\n    constructor(private activatedRoute : ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient) {\r\n\r\n        this.answer = <Answer>{};\r\n\r\n        var id = +this.activatedRoute.snapshot.params[\"id\"];\r\n\r\n        this.editMode = (this.activatedRoute.snapshot.url[1].path === \"edit\");\r\n\r\n        if (this.editMode) {\r\n            let url =  `${environment.api_url}` + \"api/answer/\" + id;\r\n            this.http.get<Answer>(url).subscribe(result => {\r\n                this.answer = result;\r\n                this.title = \"Edit - \" + this.answer.text;\r\n            }, error => console.error(error));\r\n        } else {\r\n            this.answer.questionId = id;\r\n            this.title  = \"Create a new answer\";\r\n        }\r\n     }\r\n     \r\n     onSubmit(answer : Answer){\r\n        let url =  `${environment.api_url}` + \"api/answer\";\r\n\r\n        if (this.editMode) {\r\n            this.http.post<Answer>(url, answer).subscribe(result => {\r\n                var v = result;\r\n                console.log(\"Answer \" + v.id + \"has been updated\");\r\n                this.router.navigate([\"answer/create\", v.questionId]);\r\n            }, error => console.error(error));\r\n        } else {\r\n            this.http.put<Answer>(url, answer).subscribe(result => {\r\n                var v = result;\r\n                console.log(\"Answer \" + v.id + \"has been created\");\r\n                this.router.navigate([\"answer/edit\", v.questionId]);\r\n            }, error => console.error(error));            \r\n        }\r\n     }\r\n\r\n     onBack(){\r\n         this.router.navigate([\"answer/edit\", this.answer.questionId]);\r\n     }\r\n}","module.exports = \"table.answers{\\r\\n    min-width: 500px;\\r\\n}\"","module.exports = \"<h3> Answers </h3>\\r\\n<div *ngIf=\\\"answers.length > 0\\\">\\r\\n  <table class=\\\"answers\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Text</th>\\r\\n        <th>Options</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let answer of answers\\\">\\r\\n        <td>{{answer.text}}</td>\\r\\n        <td><input type=\\\"button\\\" value=\\\"Edit\\\" (click)=\\\"onEdit(answer)\\\"></td>\\r\\n        <td><input type=\\\"button\\\" value=\\\"Delete\\\" (click)=\\\"onDelete(answer)\\\"></td>        \\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n<div *ngIf=\\\"answers.length == 0\\\">\\r\\n  This question has no answers yet.\\r\\n  Click the <strong> Add a new Answer</strong> button to addd the first answer !\\r\\n</div>\\r\\n<input type=\\\"button\\\" value=\\\"Add a new Answer\\\" (click)=\\\"onCreate()\\\">\\r\\n\\r\\n\"","\r\nimport { Component, Inject, Input, OnChanges, SimpleChanges } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Router } from \"@angular/router\";\r\nimport { error } from \"@angular/compiler/src/util\";\r\n\r\n@Component({\r\n    selector: \"answer-list\",\r\n    templateUrl: './answer-list.component.html',\r\n    styleUrls: ['./answer-list.component.css']\r\n})\r\n\r\nexport class AnswerListComponent implements OnChanges {\r\n\r\n    @Input() question: Question;\r\n    answers: Answer[];\r\n    title: string;\r\n\r\n    constructor(private http: HttpClient,\r\n        private router: Router) {\r\n        this.answers = [];\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        if (typeof changes['question'] != \"undefined\") {\r\n\r\n            //retrieve the question variable change info\r\n            var change = changes['question'];\r\n            //only perform the task if the value has been changed\r\n            if (!change.isFirstChange()) {\r\n                this.loadData();\r\n            }\r\n        }\r\n    }\r\n\r\n    loadData() {\r\n\r\n        let url = `${environment.api_url}` + \"api/question/list/\" + this.question.id;\r\n        this.http.get<Answer[]>(url).subscribe(res => {\r\n            this.answers = res;\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    onCreate() {\r\n        this.router.navigate([\"/answer/create\", this.question.id]);\r\n    }\r\n\r\n    onEdit(answer: Answer) {\r\n        this.router.navigate([\"/answer/edit\", answer.id]);\r\n    }\r\n\r\n    onDelete(answer: Answer) {\r\n        if (confirm(\"Do you really want to delete this answer?\")) {\r\n\r\n            let url = `${environment.api_url}` + \"api/answer/\" + this.question.id;\r\n            this.http.delete(url).subscribe(res => {\r\n                console.log(\"Answer \" + answer.id + \"has been deleted\");\r\n\r\n                //refresh the answer list\r\n                this.loadData();\r\n            }, error => console.error(error));\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","module.exports = \"@media (max-width: 767px) {\\r\\n    /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n    .body-content {\\r\\n        padding-top: 50px;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div class='container-fluid'>\\r\\n  <div class='row'>\\r\\n    <div class='col-sm-3'>\\r\\n      <nav-menu></nav-menu>\\r\\n    </div>\\r\\n    <div class='col-sm-9 body-content'>\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","module.exports = \"<h1>Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table' *ngIf=\\\"forecasts\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Date</th>\\r\\n            <th>Temp. (C)</th>\\r\\n            <th>Temp. (F)</th>\\r\\n            <th>Summary</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n            <td>{{ forecast.dateFormatted }}</td>\\r\\n            <td>{{ forecast.temperatureC }}</td>\\r\\n            <td>{{ forecast.temperatureF }}</td>\\r\\n            <td>{{ forecast.summary }}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\"","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'fetchdata',\r\n    templateUrl: './fetchdata.component.html'\r\n})\r\n\r\nexport class FetchDataComponent {\r\n    public forecasts: WeatherForecast[];\r\n\r\n    constructor(http: HttpClient) {        \r\n        http.get(`${environment.api_url}` + 'api/SampleData/WeatherForecasts').subscribe(result => {\r\n            this.forecasts = result as WeatherForecast[];\r\n        }, error => console.error(error));\r\n    }\r\n}\r\n\r\ninterface WeatherForecast {\r\n    dateFormatted: string;\r\n    temperatureC: number;\r\n    temperatureF: number;\r\n    summary: string;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = \"quiz-list{\\r\\n    width: 400px;\\r\\n    display: block;\\r\\n    padding: 2px 20px;\\r\\n    margin: 0px 5px;\\r\\n    float: left;   \\r\\n}\\r\\n\\r\\nquiz-list.latest {\\r\\n    background-color : lightgray\\r\\n}\\r\\n\\r\\nquiz-list.byTitle {\\r\\n    background-color: darkgrey;    \\r\\n}\\r\\n\\r\\n\"","module.exports = \"<h1>Quiz List</h1>\\r\\n<p>Welcome to Quiz Application</p>\\r\\n<quiz-list class=\\\"latest\\\"></quiz-list>\\r\\n<quiz-list class=\\\"byTitle\\\"></quiz-list>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n}\r\n","module.exports = \"<h2> {{title}} </h2>\\r\\n<div>\\r\\n TODO -Not implemented\\r\\n</div>\\r\\n\"","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"login\",\r\n    templateUrl: './login.component.html'    \r\n})\r\n\r\nexport class LoginComponent {\r\n    title = \"Login\";          \r\n    \r\n}\r\n\r\n\r\n\r\n\r\n","module.exports = \"li .glyphicon {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n/* Highlighting rules for nav menu items */\\r\\n\\r\\nli.link-active a,\\r\\nli.link-active a:hover,\\r\\nli.link-active a:focus {\\r\\n    background-color: #4189C7;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n/* Keep the nav menu independent of scrolling and on top of other items */\\r\\n\\r\\n.main-nav {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n    /* On small screens, convert the nav menu to a vertical sidebar */\\r\\n    .main-nav {\\r\\n        height: 100%;\\r\\n        width: calc(25% - 20px);\\r\\n    }\\r\\n    .navbar {\\r\\n        border-radius: 0px;\\r\\n        border-width: 0px;\\r\\n        height: 100%;\\r\\n    }\\r\\n    .navbar-header {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar-collapse {\\r\\n        border-top: 1px solid #444;\\r\\n        padding: 0px;\\r\\n    }\\r\\n    .navbar ul {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar li {\\r\\n        float: none;\\r\\n        font-size: 15px;\\r\\n        margin: 6px;\\r\\n    }\\r\\n    .navbar li a {\\r\\n        padding: 10px 16px;\\r\\n        border-radius: 4px;\\r\\n    }\\r\\n    .navbar a {\\r\\n        /* If a menu item's text is too long, truncate it */\\r\\n        width: 100%;\\r\\n        white-space: nowrap;\\r\\n        overflow: hidden;\\r\\n        text-overflow: ellipsis;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div class='main-nav'>\\r\\n    <div class='navbar navbar-inverse'>\\r\\n        <div class='navbar-header'>\\r\\n            <button type='button' class='navbar-toggle' data-toggle='collapse' data-target='.navbar-collapse'>\\r\\n                <span class='sr-only'>Toggle navigation</span>\\r\\n                <span class='icon-bar'></span>\\r\\n                <span class='icon-bar'></span>\\r\\n                <span class='icon-bar'></span>\\r\\n            </button>\\r\\n            <a class='navbar-brand' [routerLink]=\\\"['/home']\\\">Create Test For Free</a>\\r\\n        </div>\\r\\n        <div class='clearfix'></div>\\r\\n        <div class='navbar-collapse collapse'>\\r\\n            <ul class='nav navbar-nav'>\\r\\n                <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                    <a [routerLink]=\\\"['/home']\\\">\\r\\n                        <span class='glyphicon glyphicon-home'></span> Home\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                    <a [routerLink]=\\\"['/quiz/create']\\\">\\r\\n                        <span class='glyphicon glyphicon-log-in'></span> Create Quiz\\r\\n                    </a>\\r\\n                </li>                \\r\\n                <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                    <a [routerLink]=\\\"['/fetch-data']\\\">\\r\\n                        <span class='glyphicon glyphicon-th-list'></span> Fetch data\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                    <a [routerLink]=\\\"['/about']\\\">\\r\\n                        <span class='glyphicon glyphicon-info-sign'></span> About\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                    <a [routerLink]=\\\"['/login']\\\">\\r\\n                        <span class='glyphicon glyphicon-log-in'></span> Login\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'nav-menu',\r\n    templateUrl: './navmenu.component.html',   \r\n    styleUrls: ['./navmenu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n}\r\n","module.exports = \"<h2> {{title}} </h2>\\r\\n<div>\\r\\n OOPS... this page does not exist\\r\\n</div>\\r\\n\"","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"pagenotfound\",\r\n    templateUrl: './pagenotfound.component.html'    \r\n})\r\n\r\nexport class PageNotFoundComponent {\r\n    title = \"Page not Found\";              \r\n}\r\n\r\n\r\n\r\n\r\n","module.exports = \".question-edit textarea{\\r\\n    min-width: 500px;\\r\\n}\"","module.exports = \"<h2>{{title}}</h2>\\r\\n<div class=\\\"question-edit\\\">\\r\\n    <div>\\r\\n        <label for=\\\"text\\\">Question text:</label>\\r\\n        <br />\\r\\n        <textarea id=\\\"text\\\" [(ngModel)]=\\\"question.text\\\"  placeholder=\\\"enter a suitable text...\\\"></textarea>\\r\\n    </div>\\r\\n    <div>\\r\\n        <input *ngIf=\\\"editMode\\\" type=\\\"button\\\" value=\\\"Apply Changes\\\" (click)=\\\"onSubmit(question)\\\" />\\r\\n        <input *ngIf=\\\"!editMode\\\" type=\\\"button\\\" value=\\\"Create the question\\\" (click)=\\\"onSubmit(question)\\\" />\\r\\n        <input type=\\\"button\\\" value=\\\"Cancel\\\" (click)=\\\"onBack()\\\" />\\r\\n    </div>\\r\\n\\r\\n    <answer-list *ngIf=\\\"editMode\\\" [question]=\\\"question\\\"></answer-list>\\r\\n</div>\"","import { Component,Injectable, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'question-edit',\r\n    templateUrl: './question-edit.component.html',\r\n    styleUrls : ['./question-edit.component.css']\r\n})\r\n\r\nexport class QuestionEditComponent{\r\n    title : string;\r\n    question : Question;\r\n\r\n    editMode: boolean;\r\n\r\n    constructor(private activatedRoute : ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient) {\r\n\r\n        this.question = <Question>{};\r\n\r\n        var id = +this.activatedRoute.snapshot.params[\"id\"];\r\n\r\n        this.editMode = (this.activatedRoute.snapshot.url[1].path === \"edit\");\r\n\r\n        if (this.editMode) {\r\n            let url =  `${environment.api_url}` + \"api/question/\" + id;\r\n            this.http.get<Question>(url).subscribe(result => {\r\n                this.question = result;\r\n                this.title = \"Edit - \" + this.question.text;\r\n            }, error => console.error(error));\r\n        } else {\r\n            this.question.quizId = id;\r\n            this.title  = \"Create a new question\";\r\n        }\r\n     }\r\n     \r\n     onSubmit(question : Question){\r\n        let url =  `${environment.api_url}` + \"api/question\";\r\n\r\n        if (this.editMode) {\r\n            this.http.post<Question>(url, question).subscribe(result => {\r\n                var v = result;\r\n                console.log(\"Question \" + v.id + \"has been updated\");\r\n                this.router.navigate([\"quiz/edit\", v.quizId]);\r\n            }, error => console.error(error));\r\n        } else {\r\n            this.http.put<Question>(url, question).subscribe(result => {\r\n                var v = result;\r\n                console.log(\"Question \" + v.id + \"has been created\");\r\n                this.router.navigate([\"quiz/edit\", v.quizId]);\r\n            }, error => console.error(error));            \r\n        }\r\n     }\r\n\r\n     onBack(){\r\n         this.router.navigate([\"quiz/edit\", this.question.quizId]);\r\n     }\r\n}","module.exports = \"table.questions{\\r\\n    min-width: 500px;\\r\\n}\"","module.exports = \"<h3> Questions </h3>\\r\\n<div *ngIf=\\\"questions.length > 0\\\">\\r\\n  <table class=\\\"questions\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Text</th>\\r\\n        <th>Options</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let question of questions\\\">\\r\\n        <td>{{question.text}}</td>\\r\\n        <td><input type=\\\"button\\\" value=\\\"Edit\\\" (click)=\\\"onEdit(question)\\\"></td>\\r\\n        <td><input type=\\\"button\\\" value=\\\"Delete\\\" (click)=\\\"onDelete(question)\\\"></td>        \\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n<div *ngIf=\\\"questions.length == 0\\\">\\r\\n  This quiz has no questions yet.\\r\\n  Click the <strong> Add a new Question</strong> button to addd the first question !\\r\\n</div>\\r\\n<input type=\\\"button\\\" value=\\\"Add a new Question\\\" (click)=\\\"onCreate()\\\">\\r\\n\\r\\n\"","\r\nimport { Component, Inject, Input, OnChanges, SimpleChanges } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Router } from \"@angular/router\";\r\nimport { error } from \"@angular/compiler/src/util\";\r\n\r\n@Component({\r\n    selector: \"question-list\",\r\n    templateUrl: './question-list.component.html',\r\n    styleUrls: ['./question-list.component.css']\r\n})\r\n\r\nexport class QuestionListComponent implements OnChanges {\r\n\r\n    @Input() quiz: Quiz;\r\n    questions: Question[];\r\n    title: string;\r\n\r\n    constructor(private http: HttpClient,\r\n        private router: Router) {\r\n        this.questions = [];\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        if (typeof changes['quiz'] != \"undefined\") {\r\n\r\n            //retrieve the quiz variable change info\r\n            var change = changes['quiz'];\r\n            //only perform the task if the value has been changed\r\n            if (!change.isFirstChange()) {\r\n                this.loadData();\r\n            }\r\n        }\r\n    }\r\n\r\n    loadData() {\r\n\r\n        let url = `${environment.api_url}` + \"api/question/list/\" + this.quiz.id;\r\n        this.http.get<Question[]>(url).subscribe(res => {\r\n            this.questions = res;\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    onCreate() {\r\n        this.router.navigate([\"/question/create\", this.quiz.id]);\r\n    }\r\n\r\n    onEdit(question: Question) {\r\n        this.router.navigate([\"/question/edit\", question.id]);\r\n    }\r\n\r\n    onDelete(question: Question) {\r\n        if (confirm(\"Do you really want to delete this question?\")) {\r\n\r\n            let url = `${environment.api_url}` + \"api/question/\" + this.quiz.id;\r\n            this.http.delete(url).subscribe(res => {\r\n                console.log(\"Question \" + question.id + \"has been deleted\");\r\n\r\n                //refresh the question list\r\n                this.loadData();\r\n            }, error => console.error(error));\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","module.exports = \".quiz-create input[type=\\\"text\\\"],\\r\\n.quiz-create textarea{\\r\\n  min-width: 500px;\\r\\n}\"","module.exports = \"  <h2>{{title}} </h2>\\r\\n  <div class=\\\"quiz-create\\\">\\r\\n    <div>\\r\\n      <label for=\\\"title\\\">Quiz title:</label>\\r\\n      <br />\\r\\n      <input type=\\\"text\\\" id=\\\"title\\\" [(ngModel)]=\\\"quiz.title\\\" placeholder=\\\"choose a title...\\\">\\r\\n    </div>\\r\\n    <div>\\r\\n      <label for=\\\"description\\\">Quiz description:</label>\\r\\n      <br />\\r\\n      <input type=\\\"text\\\" id=\\\"title\\\" [(ngModel)]=\\\"quiz.description\\\" placeholder=\\\"enter a description...\\\" />\\r\\n    </div>\\r\\n    <div>\\r\\n      <label for=\\\"description\\\">Quiz Informative text:</label>\\r\\n      <br />\\r\\n      <textarea type=\\\"text\\\" id=\\\"title\\\" [(ngModel)]=\\\"quiz.text\\\" placeholder=\\\"enter a text...\\\" >\\r\\n        </textarea>      \\r\\n    </div>\\r\\n    <div>\\r\\n      <input *ngIf=\\\"editMode\\\" type=\\\"button\\\" value=\\\"Apply Changes\\\" (click)=\\\"onSubmit(quiz)\\\" />\\r\\n      <input *ngIf=\\\"!editMode\\\" type=\\\"button\\\" value=\\\"Create new Quiz!\\\" (click)=\\\"onSubmit(quiz)\\\" />\\r\\n      <input type=\\\"button\\\" value=\\\"Cancel\\\" (click)=\\\"onBack()\\\" />\\r\\n    </div>\\r\\n    <question-list [quiz]=\\\"quiz\\\" *ngIf=\\\"editMode\\\"></question-list>\\r\\n    <result-list *ngIf=\\\"editMode\\\" [quiz]=\\\"quiz\\\"></result-list>\\r\\n  </div>\\r\\n\\r\\n  \"","import { Component, Inject, Input } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { ActivatedRoute, Router, Route } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"quiz-create\",\r\n    templateUrl: './quiz-create.component.html',\r\n    styleUrls: ['./quiz-create.component.css']\r\n})\r\n\r\nexport class QuizCreateComponent {\r\n    title: string;\r\n    quiz : Quiz;       \r\n\r\n    // true if editing a existing quiz\r\n    // false if creating a new one\r\n    editMode: boolean;\r\n\r\n    constructor(private activatedRoute : ActivatedRoute,\r\n        private router: Router,\r\n        private http: HttpClient){\r\n        \r\n        this.quiz = <Quiz>{};\r\n        \r\n        var id =+ this.activatedRoute.snapshot.params[\"id\"];\r\n        console.log(id);\r\n\r\n        if (id) {                \r\n            this.editMode = true;    \r\n            let url =  `${environment.api_url}` + 'api/quiz/' + id;                    \r\n    \r\n            this.http.get<Quiz>(url).subscribe(result => {\r\n                this.quiz = result;\r\n            }, error => console.error(error));\r\n        }else{\r\n            \r\n            this.title = \"Create a new Quiz\";                        \r\n        }\r\n    }\r\n    \r\n    onSubmit(quiz : Quiz){\r\n        let url =  `${environment.api_url}` + 'api/quiz/';\r\n        \r\n        if (this.editMode) {\r\n            this.http.put<Quiz>(url, quiz).subscribe(result =>{\r\n                let v = result;\r\n                console.log(\"Quiz \" + v.id + \" has been created\");\r\n                this.router.navigate([\"home\"]);\r\n            }, error => console.log(error));            \r\n        }else{\r\n            this.http.post<Quiz>(url, quiz).subscribe(result =>{\r\n                let v = result;\r\n                console.log(\"Quiz \" + v.id + \" has been updated\");\r\n                this.router.navigate([\"home\"]);\r\n            }, error => console.log(error));                 \r\n        }\r\n    }\r\n\r\n    onBack(){\r\n        this.router.navigate([\"home\"]);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","module.exports = \"ul.quizzes li {\\r\\n  color : #000acb;\\r\\n  cursor : pointer;\\r\\n}\\r\\n\\r\\n  ul.quizzes li.selected {\\r\\n    background-color : #cccccc;\\r\\n  }\\r\\n\"","module.exports = \"<h2> {{title}} </h2>\\r\\n<ul class=\\\"quizzes\\\">\\r\\n  <li *ngFor =\\\"let quiz of quizList\\\"\\r\\n      [class.selected]=\\\"quiz === selectedQuiz\\\"\\r\\n      (click) =\\\"onselect(quiz)\\\">\\r\\n    <span>{{quiz.title}}</span>\\r\\n  </li>\\r\\n</ul>\\r\\n\\r\\n\"","import { Component, Inject, Input, OnInit } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"quiz-list\",\r\n    templateUrl: './quiz-list.component.html',\r\n    styleUrls: ['./quiz-list.component.css']\r\n})\r\n\r\nexport class QuizListComponent implements OnInit {\r\n\r\n    @Input() class: string;\r\n    title: string;\r\n    selectedQuiz: Quiz;\r\n    quizList: Quiz[]; \r\n    \r\n    ngOnInit(): void {\r\n        let url =  `${environment.api_url}`;         \r\n        switch (this.class) {\r\n            case 'latest': \r\n            default:\r\n                this.title = \"Latest Quiz List\";  \r\n                url += 'api/quiz/LatestQuizList/10';\r\n                break;        \r\n            case 'byTitle':                 \r\n                this.title = \"Quiz List by Title\";  \r\n                url += 'api/quiz/ByTitle/';\r\n                break;\r\n        }\r\n\r\n        this.http.get<Quiz[]>(url).subscribe(result => {\r\n            this.quizList = result;\r\n        }, error => console.error(error));\r\n        \r\n    }       \r\n\r\n    constructor(private http: HttpClient,\r\n        private router: Router) {         \r\n    }\r\n\r\n    onselect(quiz: Quiz) {\r\n        this.selectedQuiz = quiz;\r\n        console.log(\"quiz with id \" + this.selectedQuiz + \"has been selected\");\r\n        this.router.navigate([\"quiz\",this.selectedQuiz.id]);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","module.exports = \".quiz{\\r\\n  margin: 5px;\\r\\n  padding: 5px 10px;\\r\\n  border: 1px solid black;\\r\\n  background-color: #dddddd;\\r\\n  width: 300px;\\r\\n}\\r\\n\\r\\n.quiz * {\\r\\n  vertical-align: middle;  \\r\\n}\\r\\n\\r\\n.quiz ul li {\\r\\n  padding: 5px 0;\\r\\n}\"","module.exports = \"<div class=\\\"quiz\\\">\\r\\n  <h2>{{quiz.Title}} </h2>\\r\\n  <ul>\\r\\n    <li>\\r\\n      <label> Title : </label>\\r\\n      <input [(ngModel)]=\\\"quiz.title\\\" placeholder=\\\"Insert the title\\\" />\\r\\n    </li>\\r\\n    <li>\\r\\n      <label> Description: </label>\\r\\n      <textarea [(ngModel)]=\\\"quiz.description\\\" placeholder=\\\"Insert a suitable Description\\\"></textarea>\\r\\n    </li>\\r\\n  </ul>\\r\\n\\r\\n  <div>    \\r\\n    <a [routerLink]=\\\"['/quiz/edit',quiz.id]\\\"> \\r\\n      <span class='glyphicon glyphicon-edit'></span> Edit Quiz\\r\\n    </a>\\r\\n  </div>\\r\\n  <div>\\r\\n      <a (click)=onDelete()> \\r\\n        <span class='glyphicon glyphicon-remove'></span> Delete this Quiz\\r\\n      </a>    \\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, Inject, Input } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { ActivatedRoute, Router, Route } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"quiz\",\r\n    templateUrl: './quiz.component.html',\r\n    styleUrls: ['./quiz.component.css']\r\n})\r\n\r\nexport class QuizComponent {\r\n    quiz : Quiz;       \r\n\r\n    constructor(private activatedRoute : ActivatedRoute,\r\n        private router: Router,\r\n        private http: HttpClient){\r\n        \r\n        this.quiz = <Quiz>{};\r\n        \r\n        var id =+ this.activatedRoute.snapshot.params[\"id\"];\r\n        console.log(id);\r\n\r\n        if (id) {\r\n            let url =  `${environment.api_url}` + 'api/quiz/' + id;                    \r\n    \r\n            this.http.get<Quiz>(url).subscribe(result => {\r\n                this.quiz = result;\r\n            }, error => console.error(error));\r\n\r\n        }else{\r\n            console.log(\"invalid id: routing back home\");\r\n            this.router.navigate([\"home\"]);\r\n        }\r\n\r\n    }\r\n    \r\n    onDelete(){\r\n        if (confirm(\"Do you really want to delete this quiz?\")) {\r\n            let url =  `${environment.api_url}` + 'api/quiz/' + this.quiz.id;                    \r\n    \r\n            this.http.delete(url).subscribe(result => {\r\n                console.log(\"Quiz \" + this.quiz.id + \" has been deleted\");\r\n                this.router.navigate([\"home\"]);\r\n            }, error => console.error(error));\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","module.exports = \".result-edit textarea{\\r\\n    min-width: 500px;\\r\\n}\"","module.exports = \"<h2>{{title}}</h2>\\r\\n<div class=\\\"result-edit\\\">\\r\\n    <div>\\r\\n        <label for=\\\"text\\\">Result text:</label>\\r\\n        <br />\\r\\n        <textarea id=\\\"text\\\" [(ngModel)]=\\\"result.text\\\"  placeholder=\\\"enter a suitable text...\\\"></textarea>\\r\\n    </div>\\r\\n    <div>\\r\\n        <label for=\\\"MinValue\\\">Minimum Score Value: </label>\\r\\n        <br />\\r\\n        <input type=\\\"number\\\" name=\\\"MinValue\\\" id=\\\"MinValue\\\" [(ngModel)]=\\\"result.MinValue\\\" />\\r\\n    </div>\\r\\n    <div>\\r\\n        <label for=\\\"MaxValue\\\">Maximum Score Value: </label>\\r\\n        <br />\\r\\n        <input type=\\\"number\\\" name=\\\"MaxValue\\\" id=\\\"MaxValue\\\" [(ngModel)]=\\\"result.MaxValue\\\" />\\r\\n    </div>\\r\\n    <div>\\r\\n        <input *ngIf=\\\"editMode\\\" type=\\\"button\\\" value=\\\"Apply Changes\\\" (click)=\\\"onSubmit(result)\\\" />\\r\\n        <input *ngIf=\\\"!editMode\\\" type=\\\"button\\\" value=\\\"Create the Result\\\" (click)=\\\"onSubmit(result)\\\" />\\r\\n        <input type=\\\"button\\\" value=\\\"Cancel\\\" (click)=\\\"onBack()\\\" />\\r\\n    </div>\\r\\n</div>\"","import { Component,Injectable, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'result-edit',\r\n    templateUrl: './result-edit.component.html',\r\n    styleUrls : ['./result-edit.component.css']\r\n})\r\n\r\nexport class ResultEditComponent{\r\n    title : string;\r\n    result : Result;\r\n\r\n    editMode: boolean;\r\n\r\n    constructor(private activatedRoute : ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient) {\r\n\r\n        this.result = <Result>{};\r\n\r\n        var id = +this.activatedRoute.snapshot.params[\"id\"];\r\n\r\n        this.editMode = (this.activatedRoute.snapshot.url[1].path === \"edit\");\r\n\r\n        if (this.editMode) {\r\n            let url =  `${environment.api_url}` + \"api/question/\" + id;\r\n            this.http.get<Result>(url).subscribe(result => {\r\n                this.result = result;\r\n                this.title = \"Edit - \" + this.result.text;\r\n            }, error => console.error(error));\r\n        } else {\r\n            this.result.quizId = id;\r\n            this.title  = \"Create a new result\";\r\n        }\r\n     }\r\n     \r\n     onSubmit(result : Result){\r\n        let url =  `${environment.api_url}` + \"api/result\";\r\n\r\n        if (this.editMode) {\r\n            this.http.post<Result>(url, result).subscribe(result => {\r\n                var v = result;\r\n                console.log(\"Result \" + v.id + \"has been updated\");\r\n                this.router.navigate([\"result/create\", v.quizId]);\r\n            }, error => console.error(error));\r\n        } else {\r\n            this.http.put<Result>(url, result).subscribe(result => {\r\n                var v = result;\r\n                console.log(\"Result \" + v.id + \"has been created\");\r\n                this.router.navigate([\"result/edit\", v.quizId]);\r\n            }, error => console.error(error));            \r\n        }\r\n     }\r\n\r\n     onBack(){\r\n         this.router.navigate([\"result/edit\", this.result.quizId]);\r\n     }\r\n}","module.exports = \"table.questions{\\r\\n    min-width: 500px;\\r\\n}\"","module.exports = \"<h3> Results </h3>\\r\\n<div *ngIf=\\\"results.length > 0\\\">\\r\\n  <table class=\\\"results\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Text</th>\\r\\n        <th>Min. Value</th>\\r\\n        <th>Max. Value</th>\\r\\n        <th>Options</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let result of results\\\">\\r\\n        <td>{{result.text}}</td>\\r\\n        <td *ngIf=\\\"result.minValue === null\\\">N/A </td>\\r\\n        <td *ngIf=\\\"result.minValue !== null\\\">{{result.minValue}}}</td>\\r\\n        <td *ngIf=\\\"result.maxValue === null\\\">N/A </td>\\r\\n        <td *ngIf=\\\"result.maxValue !== null\\\">{{result.maxValue}}}</td>\\r\\n        <td><input type=\\\"button\\\" value=\\\"Edit\\\" (click)=\\\"onEdit(result)\\\"></td>\\r\\n        <td><input type=\\\"button\\\" value=\\\"Delete\\\" (click)=\\\"onDelete(result)\\\"></td>        \\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n<div *ngIf=\\\"results.length == 0\\\">\\r\\n  This quiz has no results yet.\\r\\n  Click the <strong> Add a new result</strong> button to addd the first result !\\r\\n</div>\\r\\n<input type=\\\"button\\\" value=\\\"Add a new result\\\" (click)=\\\"onCreate()\\\">\\r\\n\\r\\n\"","\r\nimport { Component, Inject, Input, OnChanges, SimpleChanges } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Router } from \"@angular/router\";\r\nimport { error } from \"@angular/compiler/src/util\";\r\n\r\n@Component({\r\n    selector: \"result-list\",\r\n    templateUrl: './result-list.component.html',\r\n    styleUrls: ['./result-list.component.css']\r\n})\r\n\r\nexport class ResultListComponent implements OnChanges {\r\n\r\n    @Input() quiz : Quiz;\r\n    results: Result[];\r\n    title: string;\r\n\r\n    constructor(private http: HttpClient,\r\n        private router: Router) {\r\n        this.results = [];\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        if (typeof changes['quiz'] != \"undefined\") {\r\n\r\n            //retrieve the quiz variable change info\r\n            var change = changes['quiz'];\r\n            //only perform the task if the value has been changed\r\n            if (!change.isFirstChange()) {\r\n                this.loadData();\r\n            }\r\n        }\r\n    }\r\n\r\n    loadData() {\r\n\r\n        let url = `${environment.api_url}` + \"api/result/list/\" + this.quiz.id;\r\n        this.http.get<Result[]>(url).subscribe(res => {\r\n            this.results = res;\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    onCreate() {\r\n        this.router.navigate([\"/result/create\", this.quiz.id]);\r\n    }\r\n\r\n    onEdit(quiz: Quiz) {\r\n        this.router.navigate([\"/result/edit\", quiz.id]);\r\n    }\r\n\r\n    onDelete(result: Result) {\r\n        if (confirm(\"Do you really want to delete this result?\")) {\r\n\r\n            let url = `${environment.api_url}` + \"api/result/\" + this.quiz.id;\r\n            this.http.delete(url).subscribe(res => {\r\n                console.log(\"Result \" + result.id + \"has been deleted\");\r\n\r\n                //refresh the result list\r\n                this.loadData();\r\n            }, error => console.error(error));\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_url: 'http://localhost:5979/',\n\n  weatherforecast_url: 'api/SampleData/WeatherForecasts'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}